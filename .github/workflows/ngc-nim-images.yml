name: NGC NIM Images Workflow

on:
  # 1) Daily schedule at midnight UTC
  schedule:
    - cron: '0 0 * * *'
  # 2) Manual trigger
  workflow_dispatch:
  # 3) Optional triggers on push or pull requests to main
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  fetch-nim-images:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Needed to commit & push changes

    steps:
      - name: Check out Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl unzip

      - name: Install NGC CLI
        run: |
          curl -O https://ngc.nvidia.com/downloads/ngccli_linux.zip
          unzip ngccli_linux.zip -d $HOME/.ngc
          chmod +x $HOME/.ngc/ngc-cli/ngc
          echo "$HOME/.ngc/ngc-cli" >> $GITHUB_PATH

      - name: Authenticate with NGC
        env:
          NGC_API_KEY: ${{ secrets.NGC_API_KEY }}
        run: |
          mkdir -p ~/.ngc
          cat <<EOF > ~/.ngc/config
          [CURRENT]
          apikey = $NGC_API_KEY
          format_type = json
          org = 0628453927502513
          EOF
          chmod 600 ~/.ngc/config

      - name: Fetch and Filter NVIDIA NIM Images
        run: |
          ngc registry image list \
            | jq '[ .[]
                    | select(any(.labels[]?.values[]?; . == "NVIDIA NIM")) ]
                  | {
                      count: length,
                      displayNames: [.[].displayName]
                    }' \
              > new_nim_images.json

      - name: Archive and Diff
        run: |
          # Get today's, yesterday's, and 7-days-ago date strings in UTC
          todayStr=$(date -u +%F)
          ydayStr=$(date -u -d "1 day ago" +%F)
          weekStr=$(date -u -d "7 days ago" +%F)

          mkdir -p data/archive

          # 1) Archive today's snapshot (e.g. data/archive/2025-03-09.json)
          cp new_nim_images.json data/archive/${todayStr}.json

          # 2) Prepare nim_diff.txt
          echo "==== NIM Changes Over Past Day (Compare ${ydayStr} to ${todayStr}) ====" > nim_diff.txt

          # Compare "yesterday" vs. "today" if that file exists
          if [ -f data/archive/${ydayStr}.json ]; then
            jq -r '.displayNames[]' data/archive/${ydayStr}.json > old_nims_day.txt
            jq -r '.displayNames[]' new_nim_images.json         > new_nims.txt
            sort old_nims_day.txt > old_day_sorted.txt
            sort new_nims.txt     > new_sorted.txt

            echo "=== Added NIMs (past 1 day) ===" >> nim_diff.txt
            comm -13 old_day_sorted.txt new_sorted.txt >> nim_diff.txt || true

            echo -e "\n=== Removed NIMs (past 1 day) ===" >> nim_diff.txt
            comm -23 old_day_sorted.txt new_sorted.txt >> nim_diff.txt || true
          else
            echo "No data from ${ydayStr} found." >> nim_diff.txt
          fi

          echo "" >> nim_diff.txt
          echo "==== NIM Changes Over Past 7 Days (Compare ${weekStr} to ${todayStr}) ====" >> nim_diff.txt

          # Compare "7 days ago" vs. "today" if that file exists
          if [ -f data/archive/${weekStr}.json ]; then
            jq -r '.displayNames[]' data/archive/${weekStr}.json > old_nims_week.txt
            jq -r '.displayNames[]' new_nim_images.json          > new_nims.txt
            sort old_nims_week.txt > old_week_sorted.txt
            sort new_nims.txt      > new_sorted.txt

            echo "=== Added NIMs (past 7 days) ===" >> nim_diff.txt
            comm -13 old_week_sorted.txt new_sorted.txt >> nim_diff.txt || true

            echo -e "\n=== Removed NIMs (past 7 days) ===" >> nim_diff.txt
            comm -23 old_week_sorted.txt new_sorted.txt >> nim_diff.txt || true
          else
            echo "No data from ${weekStr} found." >> nim_diff.txt
          fi

      - name: Commit and Push New Data
        run: |
          # Keep a "latest" copy in data/nim_images.json
          mv new_nim_images.json data/nim_images.json
          mv nim_diff.txt data/nim_diff.txt

          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Stage everything (including new daily archive file)
          git add data/nim_images.json data/nim_diff.txt data/archive

          # Commit & push only if changes exist
          if ! git diff --cached --quiet; then
            git commit -m "Daily NIM update + diff [skip ci]"
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi

      - name: Upload JSON Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nim-images
          path: |
            data/nim_images.json
            data/nim_diff.txt
            data/archive

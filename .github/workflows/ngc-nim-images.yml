name: NGC NIM Images Workflow

on:
  workflow_dispatch:  # Add manual trigger
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  fetch-nim-images:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl unzip

      - name: Install NGC CLI
        run: |
          curl -O https://ngc.nvidia.com/downloads/ngccli_linux.zip
          unzip ngccli_linux.zip -d $HOME/.ngc
          chmod +x $HOME/.ngc/ngc-cli/ngc
          echo "$HOME/.ngc/ngc-cli" >> $GITHUB_PATH

      - name: Authenticate with NGC
        env:
          NGC_API_KEY: ${{ secrets.NGC_API_KEY }}
        run: |
          mkdir -p ~/.ngc
          cat > ~/.ngc/config << 'EOL'
          [CURRENT]
          apikey = $NGC_API_KEY
          format_type = json
          org = 0628453927502513
          EOL
          chmod 600 ~/.ngc/config

      - name: Fetch and Filter NVIDIA NIM Images
        run: |
          ngc registry image list \
            | jq '[ .[] 
                    | select(any(.labels[]?.values[]?; . == "NVIDIA NIM")) ]
                  | {
                      count: length,
                      displayNames: [.[].displayName]
                    }' > new_nim_images.json

      - name: Compare with Previous Version
        run: |
          if [ -f data/nim_images.json ]; then
            echo "===== Checking additions/removals ====="
            jq -r '.displayNames[]' data/nim_images.json > old_nims.txt
            jq -r '.displayNames[]' new_nim_images.json > new_nims.txt

            sort old_nims.txt > old_sorted.txt
            sort new_nims.txt > new_sorted.txt

            echo "=== Added NIMs ==="
            comm -13 old_sorted.txt new_sorted.txt || true

            echo "=== Removed NIMs ==="
            comm -23 old_sorted.txt new_sorted.txt || true

            echo "=== Raw JSON diff ==="
            diff data/nim_images.json new_nim_images.json || true
          else
            echo "No previous version found (first run)."
          fi

      - name: Commit and Push New Data
        run: |
          mkdir -p data
          mv new_nim_images.json data/nim_images.json
          
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          git add data/nim_images.json
          
          if ! git diff --cached --quiet; then
            git commit -m "Update NIM images [skip ci]"
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi

      - name: Upload JSON Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nim-images
          path: data/nim_images.json
